{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Hello, I'm Advay!","text":""},{"location":"#about-me","title":"About Me","text":"<p>I'm a rising junior at the National University of Singapore, currently reading Mathematics and Computer Science as part of a double-degree programme.</p> <p>I'm broadly interested in solving fun and interesting problems with a computational flavour, in domains including but not limited to:</p> <ul> <li>Robotics (Software Engineer at Bumblebee Autonomous Systems)</li> <li>AI/Machine Learning (previously MLE intern at Pixta Vietnam, awesome 3 months spent in Vietnam through NOC)</li> <li>Low-level stuff (not very good at it, trying to get better through stupid projects like this)</li> <li>Mathematics has my heart &lt;3 (pure and applied, with a bias towards analysis)</li> </ul>"},{"location":"blog/","title":"Latest Posts","text":""},{"location":"blog/tags/","title":"Tags","text":""},{"location":"blog/tags/#tag:analysis","title":"analysis","text":"<ul> <li>            A note on differentiability          </li> </ul>"},{"location":"blog/tags/#tag:mathematics","title":"mathematics","text":"<ul> <li>            A note on differentiability          </li> </ul>"},{"location":"blog/tags/#tag:setup","title":"setup","text":"<ul> <li>            NVIDIA development environment setup on Ubuntu          </li> </ul>"},{"location":"blog/2025/06/12/a-note-on-differentiability/","title":"A note on differentiability","text":"<p>The purpose of this note is to collect together some basic ideas and intuitions for the concept of differentiability.</p> <p>We define say that a function \\(f: \\mathbb{R} \\to \\mathbb{R}\\) is differentiable at some point \\(a\\) if the limit</p> \\[ f'(a) = \\lim_{h \\to 0}{\\frac{f(a + h) - f(a)}{h}} \\] <p>exists, and \\(f'(a)\\) is termed the derivative at the point \\(a\\).</p>","tags":["mathematics","analysis"]},{"location":"blog/2025/06/12/a-note-on-differentiability/#linear-approximations","title":"Linear Approximations","text":"<p>However, the \"right\" way of thinking about a function being differentiable at some point is that it admits a linear approximation at that point; when we zoom close enough in, the function in fact behaves linearly around that point. Thus when we are sufficiently close to \\(a\\), we have a linear approximation</p> \\[ f(a + h) \\approx f(a) + hf'(a)\\,. \\] <p>Rearranging the above equation, we get exactly the usual limit definition of a derivative (\\(h\\) is small here). The derivative is thus the linear approximation of the function.</p>","tags":["mathematics","analysis"]},{"location":"blog/2025/06/12/a-note-on-differentiability/#removing-the-quotient","title":"Removing the quotient","text":"<p>Extending the above limit definition to higher dimensions, however, isn't immediate, since we don't have a meaningful way to represent the quotient by a vector \\(h\\). However, we may write</p> \\[ g(h) = {\\frac{f(a + h) - f(a)}{h}} - f'(a) \\] <p>where \\(g(h)\\) tends to \\(0\\) as \\(h\\) tends to \\(0\\). Getting rid of the quotient by \\(h\\), we have</p> \\[ f(a + h) - f(a) = f'(a)h + hg(h)\\,. \\] <p>Defining \\(g(0)=0\\), then we can extend the relation to the case when \\(h=0\\). Further noting that we can replace \\(h\\) with \\(-h\\) if we replace \\(g\\) with \\(-g\\), we have shown that if \\(f\\) is differentiable at \\(a\\), then there exists some \\(g\\) satisfying \\(\\lim_{h \\to 0}g(h)=0\\) such that</p> \\[ f(a + h) - f(a) = f'(a)h + |h|g(h)\\,. \\] <p>One can check that the converse holds as well. Thus, we have an equivalent definition of differentiability that avoids a quotient, and can thus be easily extended to multiple variables; the products become matrix/vector products and \\(f'(a)\\) becomes the Jacobian \\(J_f\\).</p>","tags":["mathematics","analysis"]},{"location":"blog/2025/06/12/a-note-on-differentiability/#the-key-intuition","title":"The Key Intuition","text":"<p>Notice that the term \\(|h|g(h) = f(a+h) - (f(a) + J_f h)\\) represents the error between the function and its linear approximation. We want this linear approximation to be \"good\" \u2014 in particular, we should be able to make some statement about the error term above.</p> <p>From one of the StackExchange answers below,</p> <p>Key Intuition</p> <p>... in neighborhoods close to the point \\(a\\), the difference between the function and its linear approximations should be incredibly small \u2212 in particular, it should be even smaller than the difference \\(|h|\\) between the new and old inputs. Put another way, the approximation should get \"infinitely\" good, relative to the change in input, as the change in input goes to 0 (in magnitude).</p> <p>Thus for the error \\(|h|g(h) = f(a+h) - (f(a) + J_f h)\\) to become extremely (or even infinitely) small with respect to the error in the input \\(|h|\\), we need</p> \\[ \\lim_{h \\to 0}\\frac{|f(a+h) - (f(a) + J_f h)|}{|h|} = \\lim_{h \\to 0}{g(h)} = 0\\,, \\] <p>which is exactly the condition in the definition of differentiability, validating our intuition.</p> <p>Using little-o notation (we say \\(f(x) = o(g(x))\\) if \\(\\lim_{x \\to \\infty}{\\frac{f(x)}{g(x)}} = 0\\)), we can very succinctly capture the idea that the error between the function and its linear approximation goes to \\(0\\) faster than the error in the input does.</p> <p>Key Result</p> \\[ f(a+h) - (f(a) + J_f h) = o(|h|)\\,. \\] <p>This last equation, at least to me, is all that is worth remembering.</p>","tags":["mathematics","analysis"]},{"location":"blog/2025/06/12/a-note-on-differentiability/#sources","title":"Sources","text":"<p>Whenever I needed a refresher on the concept of differentiability, I would always go back to these three resources:</p> <ol> <li>Serge Lang's Calculus of Several Variables, particularly chapter III, section 3 on differentiability and the gradient.</li> <li>This excellent Math StackExchange answer.</li> <li>This similarly excellent answer.</li> </ol> <p>This note is just an attempt to collate these ideas in one place for my own reference. All credit should rightfully go to the above sources.</p> <p>Share on  Share on </p>","tags":["mathematics","analysis"]},{"location":"blog/2025/09/21/nvidia-development-environment-setup-on-ubuntu/","title":"NVIDIA development environment setup on Ubuntu","text":"<p>Because NVIDIA likes to nuke its own drivers on my system every few months.</p>","tags":["setup"]},{"location":"blog/2025/09/21/nvidia-development-environment-setup-on-ubuntu/#nuking-everything-nvidia-from-existence","title":"Nuking everything NVIDIA from existence","text":"Bash<pre><code>dpkg -l | grep nvidia | awk '{print $2}' | xargs sudo dpkg --force-all -P; sudo apt --fix-broken install\n</code></pre>","tags":["setup"]},{"location":"blog/2025/09/21/nvidia-development-environment-setup-on-ubuntu/#installing-the-drivers","title":"Installing the drivers","text":"Bash<pre><code>sudo ubuntu-drivers install\n</code></pre>","tags":["setup"]},{"location":"blog/2025/09/21/nvidia-development-environment-setup-on-ubuntu/#installing-cuda-toolkit","title":"Installing CUDA Toolkit","text":"<p>Follow the instructions here.</p>","tags":["setup"]},{"location":"blog/2025/09/21/nvidia-development-environment-setup-on-ubuntu/#installing-nvidia-container-toolkit","title":"Installing <code>nvidia-container-toolkit</code>","text":"<p>The instructions from here are replicated below.</p> Bash<pre><code>curl -fsSL https://nvidia.github.io/libnvidia-container/gpgkey | sudo gpg --dearmor -o /usr/share/keyrings/nvidia-container-toolkit-keyring.gpg \\\n  &amp;&amp; curl -s -L https://nvidia.github.io/libnvidia-container/stable/deb/nvidia-container-toolkit.list | \\\n    sed 's#deb https://#deb [signed-by=/usr/share/keyrings/nvidia-container-toolkit-keyring.gpg] https://#g' | \\\n    sudo tee /etc/apt/sources.list.d/nvidia-container-toolkit.list\n# optionally, run:\n# sed -i -e '/experimental/ s/^#//g' /etc/apt/sources.list.d/nvidia-container-toolkit.list\nsudo apt-get update\nexport NVIDIA_CONTAINER_TOOLKIT_VERSION=1.17.8-1\n  sudo apt-get install -y \\\n      nvidia-container-toolkit=${NVIDIA_CONTAINER_TOOLKIT_VERSION} \\\n      nvidia-container-toolkit-base=${NVIDIA_CONTAINER_TOOLKIT_VERSION} \\\n      libnvidia-container-tools=${NVIDIA_CONTAINER_TOOLKIT_VERSION} \\\n      libnvidia-container1=${NVIDIA_CONTAINER_TOOLKIT_VERSION}\n</code></pre>","tags":["setup"]},{"location":"blog/2025/09/21/nvidia-development-environment-setup-on-ubuntu/#configuring-nvidia-container-toolkit-for-docker","title":"Configuring <code>nvidia-container-toolkit</code> for docker","text":"Bash<pre><code>sudo nvidia-ctk runtime configure --runtime=docker\nsudo systemctl restart docker\n</code></pre> <p>And we are hopefully done.</p> <p>I hope the day comes that I never have to do this again. Till then, this.</p> <p>Share on  Share on </p>","tags":["setup"]},{"location":"blog/archive/2025/","title":"September 2025","text":""}]}